stages:
  - test
  - build
  - deploy

variables:
  HELM_CHART: "my-microservice"
  KUBE_NAMESPACE: "production"
  ARGOCD_SERVER: "argocd.your-domain.com"
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

test:
  stage: test
  image: python:3.9
  script:
    - pip install -r requirements.txt
    - pytest

build:
  stage: build
  image: docker:20.10
  services:
    - docker:20.10-dind
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

deploy-to-argocd:
  stage: deploy
  image: alpine/helm:3.12
  script:
    - apk add --no-cache curl jq
    - |
      curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
      chmod +x /usr/local/bin/argocd
    - argocd login $ARGOCD_SERVER --username admin --password $ARGOCD_PASSWORD --insecure
    - argocd app set $HELM_CHART --helm-set image.tag=$CI_COMMIT_SHA
    - argocd app sync $HELM_CHART
    - argocd app wait $HELM_CHART --health
  only:
    - main

deploy:
  stage: deploy
  script:
    - echo "Deploy to production"
  environment: production 